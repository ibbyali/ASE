<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TurtleForm</name>
    </assembly>
    <members>
        <member name="T:TurtleForm.Canvas">
            <summary>
            Declaration of variables
            </summary>
        </member>
        <member name="M:TurtleForm.Canvas.DrawLine(System.Int32,System.Int32)">
            <summary>
            Takes both parameters of intparameter array and sets it to 'toY' and 'toY' which draws a line
            </summary>
            <param name="toX"></param>
            <param name="toY"></param>
        </member>
        <member name="M:TurtleForm.Canvas.DrawSquare(System.Int32)">
            <summary>
            Takes intparameter and set it as length and the function creates the square
            </summary>
            <param name="length"></param>
        </member>
        <member name="M:TurtleForm.Canvas.DrawRectangle(System.Int32,System.Int32)">
            <summary>
            Takes intparameter and set both parameters to length and height and that creates the function for rectangle
            </summary>
            <param name="length"></param>
            <param name="height"></param>
        </member>
        <member name="M:TurtleForm.Canvas.DrawTriangle(System.Int32)">
            <summary>
            Takes intparameter and set it as length and the function creates the triangle
            </summary>
            <param name="length"></param>
        </member>
        <member name="M:TurtleForm.Canvas.DrawCircle(System.Int32)">
            <summary>
            Takes intparameter and set it as radis of circle and function create the circle
            </summary>
            <param name="radius"></param>
        </member>
        <member name="M:TurtleForm.Canvas.PenColor(System.Drawing.Color)">
            <summary>
            sets new pen when it is called
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:TurtleForm.Canvas.MoveTo(System.Int32,System.Int32)">
            <summary>
            Sets new pen location
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:TurtleForm.Canvas.ClearWindow">
            <summary>
            this functions clears the picture box
            </summary>
        </member>
        <member name="M:TurtleForm.Canvas.Fillstate(System.Boolean)">
            <summary>
            makes the fill variable a boolean
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TurtleForm.Cmd.parseCommands(System.String)">
            <summary>
            Takes input from user and trims and split line is they is a space
            first split stores in command and get checked if it a valid command and executes the correct function
            second split gets stored in parameter array which is the expected result of the command if needed
            within paramater if they is a "," each number gets stored in a space of intparameter array
            </summary>
            <param name="line"></param>
        </member>
        <member name="M:TurtleForm.execute.#ctor">
            <summary>
            Main class which the program executes from
            </summary>
        </member>
        <member name="M:TurtleForm.execute.commandLineBox_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Takes input from textbox which is sent to cmd class after enter button is hit
            also checks line by line rich text box and send input to cmd class
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TurtleForm.execute.button3_Click(System.Object,System.EventArgs)">
            <summary>
            Opens open 'file box' dialog box
            default filter txt files
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TurtleForm.execute.button4_Click(System.Object,System.EventArgs)">
            <summary>
            Opens 'save file' dialog box
            saves file as a txt file
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:TurtleForm.execute.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:TurtleForm.execute.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:TurtleForm.execute.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:TurtleForm.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="T:TurtleForm.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:TurtleForm.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:TurtleForm.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
